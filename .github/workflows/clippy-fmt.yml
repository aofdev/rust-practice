name: Lint

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  check_folders:
    runs-on: ubuntu-latest
    name: Check folders
    outputs:
      run_job: ${{ steps.list_folders.outputs.run_job }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List folders
        id: list_folders
        run: |
          JOBS=$(for file in $(ls -d */); do
            jq -n --arg job "$file" '{job: $job}'
          done | \
          jq -cMn '.include |= [inputs]')
          echo "::set-output name=run_job::$JOBS"
  
  job_runner:
    runs-on: ubuntu-latest
    name: Lint folder (${{ matrix.job }})
    needs: check_folders
    strategy:
      max-parallel: 3
      matrix: ${{ fromJson(needs.check_folders.outputs.run_job) }}
    steps:
      - uses: actions/checkout@v2
      - name: Check with rustfmt
        run: cargo fmt --all -- --check
        working-directory: ${{ matrix.job }}

      - run: rustup component add clippy
      - name: Check with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GIT_TOKEN }}
          args: --workspace --tests --all-features --manifest-path ${{ matrix.job }}/Cargo.toml
